{"version":3,"sources":["EnterExitFunctions.ts"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,IAAM,mBAAmB,GAAgB;IACrC,IAAM,cAAc,GAAS,QAAQ,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;IAE9E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAM,gBAAgB,GAAY,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;QACnG,IAAM,gBAAgB,GAAY,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;QACnG,IAAM,qBAAqB,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QAC3G,IAAM,qBAAqB,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QAC3G,IAAM,kBAAkB,GAAa,qBAAqB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,IAAM,YAAY,GAAY,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QAChE,IAAM,cAAc,GAAY,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QAC9F,IAAM,mBAAmB,GAAY,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI;QAExI,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,YAAY,GAAG,qBAAqB,GAAG,MAAM,GAAG,qBAAqB,GAAG,KAAK,CAAC;QAClH,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEhD,UAAU,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3E;IAED,OAAO;AACX,CAAC,CAAA;AACD,IAAM,eAAe,GAAgB;IACjC,IAAM,gBAAgB,GAAS,QAAQ,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;IAE/E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC9C,IAAM,mBAAmB,GAAa,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnF,IAAI,CAAC,mBAAmB,EAAE;YAAE,SAAS;SAAE;QAEvC,IAAM,cAAc,GAAS,gBAAgB,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QAEzF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAE5C,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;KACJ;IAED,OAAO;AACX,CAAC,CAAA;AACD,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAQ,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAQ,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"EnterExitFunctions.js","sourcesContent":["// Enter Exit Functions\r\nconst setEnterExitOffsets : () => void = () => {\r\n    const enterExitItems : any = document.getElementsByClassName(\"enterExitItem\");\r\n\r\n    for (var a = 0; a < enterExitItems.length; a++) {\r\n        const enterExitOffsetX : string = enterExitItems[a].getAttribute(\"data-enter-exit-offset-x\") || \"\";\r\n        const enterExitOffsetY : string = enterExitItems[a].getAttribute(\"data-enter-exit-offset-y\") || \"\";\r\n        const enterExitOffsetXValue = !isNaN(parseFloat(enterExitOffsetX)) ? parseFloat(enterExitOffsetX) : 0; //px\r\n        const enterExitOffsetYValue = !isNaN(parseFloat(enterExitOffsetY)) ? parseFloat(enterExitOffsetY) : 0; //px\r\n        const elementIsAboveFold : boolean = getElementIsAboveFold(enterExitItems[a]);\r\n        const defaultDelay : number = elementIsAboveFold ? 500 : 0; //ms\r\n        const enterExitDelay : string = enterExitItems[a].getAttribute(\"data-enter-exit-delay\") || \"\";\r\n        const enterExitDelayValue : number = !isNaN(parseFloat(enterExitDelay)) ? defaultDelay + parseFloat(enterExitDelay) : defaultDelay; //ms\r\n\r\n        enterExitItems[a].style.transform = \"translate(\" + enterExitOffsetXValue + \"px, \" + enterExitOffsetYValue + \"px)\";\r\n        enterExitItems[a].classList.add(\"enterExitSet\");\r\n\r\n        setTimeout(setElementEnterExit, enterExitDelayValue, enterExitItems[a]);\r\n    }  \r\n\r\n    return;            \r\n}\r\nconst manageEnterExit : () => void = () => {\r\n    const enterExitParents : any = document.getElementsByClassName(\"hasEnterExit\");\r\n\r\n    for (var a = 0; a < enterExitParents.length; a++) {\r\n        const elementIsInViewport : boolean = getElementIsInViewportY(enterExitParents[a]);\r\n        \r\n        if (!elementIsInViewport) { continue; }\r\n\r\n        const enterExitItems : any = enterExitParents[a].getElementsByClassName(\"enterExitItem\");\r\n\r\n        for (var b = 0; b < enterExitItems.length; b++) {\r\n            \r\n            setElementEnterExit(enterExitItems[b]);\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\nwindow.addEventListener(\"load\", () => { setEnterExitOffsets(); });\r\nwindow.addEventListener(\"scroll\", () => { manageEnterExit(); });"]}