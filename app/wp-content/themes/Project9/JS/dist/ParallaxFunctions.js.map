{"version":3,"sources":["ParallaxFunctions.ts"],"names":[],"mappings":"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","file":"ParallaxFunctions.js","sourcesContent":["/* Parallax Functions */\r\nconst setParallaxOffsets : () => void = () => {\r\n    const parallaxItems : any = document.getElementsByClassName(\"parallaxItem\");\r\n\r\n    for (var a = 0; a < parallaxItems.length; a++) {\r\n        const parallaxParent : any = parallaxItems[a].closest(\".hasParallax\");\r\n\r\n        if (!parallaxParent) { continue; }\r\n\r\n        const parallaxRateX : string = parallaxItems[a].getAttribute(\"data-parallax-rate-x\") || \"\";\r\n        const parallaxRateY : string = parallaxItems[a].getAttribute(\"data-parallax-rate-y\") || \"\";\r\n        const parallaxRateXValue : number = !isNaN(parseFloat(parallaxRateX)) ? parseFloat(parallaxRateX) : 0;\r\n        const parallaxRateYValue : number = !isNaN(parseFloat(parallaxRateY)) ? parseFloat(parallaxRateY) : 0;\r\n        const elementIsAboveFold : boolean = getElementIsAboveFold(parallaxItems[a]);\r\n        const elementOffsetX : number = elementIsAboveFold ? 0 : (-1) * parallaxRateXValue * (window.innerWidth / 2 - parallaxItems[a].clientWidth); //px\r\n        const elementOffsetY : number = elementIsAboveFold ? 0 : (-1) * parallaxRateYValue * (window.innerHeight - parallaxItems[a].clientHeight); //px\r\n        \r\n        parallaxItems[a].style.transform = \"translate(\" + elementOffsetX + \"px, \" + elementOffsetY + \"px)\";\r\n        parallaxItems[a].setAttribute(\"data-parallax-offset-x\", elementOffsetX);\r\n        parallaxItems[a].setAttribute(\"data-parallax-offset-y\", elementOffsetY);\r\n        parallaxItems[a].classList.add(\"parallaxSet\");\r\n    }  \r\n\r\n    return;            \r\n}\r\nconst manageParallax : () => void = () => {\r\n    const parallaxElements : any = document.getElementsByClassName(\"hasParallax\");\r\n\r\n    for (var a = 0; a < parallaxElements.length; a++) {\r\n        const elementIsInViewport : boolean = getElementIsInViewportY(parallaxElements[a]);\r\n\r\n        if (!elementIsInViewport) { continue; }\r\n        \r\n        const parallaxItems : any = parallaxElements[a].getElementsByClassName(\"parallaxItem\");\r\n\r\n        for (var b = 0; b < parallaxItems.length; b++) {\r\n            setElementParallax(parallaxItems[b]);\r\n        }   \r\n    }\r\n\r\n    return;\r\n}\r\nwindow.addEventListener(\"load\", () => { setParallaxOffsets(); });\r\nwindow.addEventListener(\"scroll\", () => { manageParallax(); });"]}