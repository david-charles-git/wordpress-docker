{"version":3,"sources":["EnterExitFunctions.ts"],"names":["setEnterExitOffsets","enterExitItems","document","getElementsByClassName","a","length","enterExitOffsetX","getAttribute","enterExitOffsetY","enterExitOffsetXValue","isNaN","parseFloat","enterExitOffsetYValue","defaultDelay","getElementIsAboveFold","enterExitDelay","enterExitDelayValue","style","transform","classList","add","setTimeout","setElementEnterExit","manageEnterExit","enterExitParents","getElementIsInViewportY","b","window","addEventListener"],"mappings":"AACA,IAAMA,oBAAmC,WAGrC,IAFA,IAAMC,EAAuBC,SAASC,uBAAuB,iBAEpDC,EAAI,EAAGA,EAAIH,EAAeI,OAAQD,IAAK,CAC5C,IAAME,EAA4BL,EAAeG,GAAGG,aAAa,6BAA+B,GAC1FC,EAA4BP,EAAeG,GAAGG,aAAa,6BAA+B,GAC1FE,EAAyBC,MAAMC,WAAWL,IAAoD,EAA/BK,WAAWL,GAC1EM,EAAyBF,MAAMC,WAAWH,IAAoD,EAA/BG,WAAWH,GAE1EK,EAD+BC,sBAAsBb,EAAeG,IACvB,IAAM,EACnDW,EAA0Bd,EAAeG,GAAGG,aAAa,0BAA4B,GACrFS,EAAgCN,MAAMC,WAAWI,IAA+DF,EAA5CA,EAAeF,WAAWI,GAEpGd,EAAeG,GAAGa,MAAMC,UAAY,aAAeT,EAAwB,OAASG,EAAwB,MAC5GX,EAAeG,GAAGe,UAAUC,IAAI,gBAEhCC,WAAWC,oBAAqBN,EAAqBf,EAAeG,MAKtEmB,gBAA+B,WAGjC,IAFA,IAAMC,EAAyBtB,SAASC,uBAAuB,gBAEtDC,EAAI,EAAGA,EAAIoB,EAAiBnB,OAAQD,IAAK,CAG9C,GAFsCqB,wBAAwBD,EAAiBpB,IAM/E,IAFA,IAAMH,EAAuBuB,EAAiBpB,GAAGD,uBAAuB,iBAE/DuB,EAAI,EAAGA,EAAIzB,EAAeI,OAAQqB,IAEvCJ,oBAAoBrB,EAAeyB,MAM/CC,OAAOC,iBAAiB,OAAQ,WAAQ5B,wBACxC2B,OAAOC,iBAAiB,SAAU,WAAQL","file":"EnterExitFunctions.min.js","sourcesContent":["// Enter Exit Functions\r\nconst setEnterExitOffsets : () => void = () => {\r\n    const enterExitItems : any = document.getElementsByClassName(\"enterExitItem\");\r\n\r\n    for (var a = 0; a < enterExitItems.length; a++) {\r\n        const enterExitOffsetX : string = enterExitItems[a].getAttribute(\"data-enter-exit-offset-x\") || \"\";\r\n        const enterExitOffsetY : string = enterExitItems[a].getAttribute(\"data-enter-exit-offset-y\") || \"\";\r\n        const enterExitOffsetXValue = !isNaN(parseFloat(enterExitOffsetX)) ? parseFloat(enterExitOffsetX) : 0; //px\r\n        const enterExitOffsetYValue = !isNaN(parseFloat(enterExitOffsetY)) ? parseFloat(enterExitOffsetY) : 0; //px\r\n        const elementIsAboveFold : boolean = getElementIsAboveFold(enterExitItems[a]);\r\n        const defaultDelay : number = elementIsAboveFold ? 500 : 0; //ms\r\n        const enterExitDelay : string = enterExitItems[a].getAttribute(\"data-enter-exit-delay\") || \"\";\r\n        const enterExitDelayValue : number = !isNaN(parseFloat(enterExitDelay)) ? defaultDelay + parseFloat(enterExitDelay) : defaultDelay; //ms\r\n\r\n        enterExitItems[a].style.transform = \"translate(\" + enterExitOffsetXValue + \"px, \" + enterExitOffsetYValue + \"px)\";\r\n        enterExitItems[a].classList.add(\"enterExitSet\");\r\n\r\n        setTimeout(setElementEnterExit, enterExitDelayValue, enterExitItems[a]);\r\n    }  \r\n\r\n    return;            \r\n}\r\nconst manageEnterExit : () => void = () => {\r\n    const enterExitParents : any = document.getElementsByClassName(\"hasEnterExit\");\r\n\r\n    for (var a = 0; a < enterExitParents.length; a++) {\r\n        const elementIsInViewport : boolean = getElementIsInViewportY(enterExitParents[a]);\r\n        \r\n        if (!elementIsInViewport) { continue; }\r\n\r\n        const enterExitItems : any = enterExitParents[a].getElementsByClassName(\"enterExitItem\");\r\n\r\n        for (var b = 0; b < enterExitItems.length; b++) {\r\n            \r\n            setElementEnterExit(enterExitItems[b]);\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\nwindow.addEventListener(\"load\", () => { setEnterExitOffsets(); });\r\nwindow.addEventListener(\"scroll\", () => { manageEnterExit(); });"]}