{"version":3,"sources":["ParallaxFunctions.ts"],"names":["setParallaxOffsets","parallaxItems","document","getElementsByClassName","a","length","closest","parallaxRateX","getAttribute","parallaxRateY","parallaxRateXValue","isNaN","parseFloat","parallaxRateYValue","elementIsAboveFold","getElementIsAboveFold","elementOffsetX","window","innerWidth","clientWidth","elementOffsetY","innerHeight","clientHeight","style","transform","setAttribute","classList","add","manageParallax","parallaxElements","getElementIsInViewportY","b","setElementParallax","addEventListener"],"mappings":"AACA,IAAMA,mBAAkC,WAGpC,IAFA,IAAMC,EAAsBC,SAASC,uBAAuB,gBAEnDC,EAAI,EAAGA,EAAIH,EAAcI,OAAQD,IAAK,CAG3C,GAF6BH,EAAcG,GAAGE,QAAQ,gBAEtD,CAEA,IAAMC,EAAyBN,EAAcG,GAAGI,aAAa,yBAA2B,GAClFC,EAAyBR,EAAcG,GAAGI,aAAa,yBAA2B,GAClFE,EAA+BC,MAAMC,WAAWL,IAA8C,EAA5BK,WAAWL,GAC7EM,EAA+BF,MAAMC,WAAWH,IAA8C,EAA5BG,WAAWH,GAC7EK,EAA+BC,sBAAsBd,EAAcG,IACnEY,EAA0BF,EAAqB,GAAM,EAAKJ,GAAsBO,OAAOC,WAAa,EAAIjB,EAAcG,GAAGe,aACzHC,EAA0BN,EAAqB,GAAM,EAAKD,GAAsBI,OAAOI,YAAcpB,EAAcG,GAAGkB,cAE5HrB,EAAcG,GAAGmB,MAAMC,UAAY,aAAeR,EAAiB,OAASI,EAAiB,MAC7FnB,EAAcG,GAAGqB,aAAa,yBAA0BT,GACxDf,EAAcG,GAAGqB,aAAa,yBAA0BL,GACxDnB,EAAcG,GAAGsB,UAAUC,IAAI,kBAKjCC,eAA8B,WAGhC,IAFA,IAAMC,EAAyB3B,SAASC,uBAAuB,eAEtDC,EAAI,EAAGA,EAAIyB,EAAiBxB,OAAQD,IAAK,CAG9C,GAFsC0B,wBAAwBD,EAAiBzB,IAM/E,IAFA,IAAMH,EAAsB4B,EAAiBzB,GAAGD,uBAAuB,gBAE9D4B,EAAI,EAAGA,EAAI9B,EAAcI,OAAQ0B,IACtCC,mBAAmB/B,EAAc8B,MAM7Cd,OAAOgB,iBAAiB,OAAQ,WAAQjC,uBACxCiB,OAAOgB,iBAAiB,SAAU,WAAQL","file":"ParallaxFunctions.min.js","sourcesContent":["/* Parallax Functions */\r\nconst setParallaxOffsets : () => void = () => {\r\n    const parallaxItems : any = document.getElementsByClassName(\"parallaxItem\");\r\n\r\n    for (var a = 0; a < parallaxItems.length; a++) {\r\n        const parallaxParent : any = parallaxItems[a].closest(\".hasParallax\");\r\n\r\n        if (!parallaxParent) { continue; }\r\n\r\n        const parallaxRateX : string = parallaxItems[a].getAttribute(\"data-parallax-rate-x\") || \"\";\r\n        const parallaxRateY : string = parallaxItems[a].getAttribute(\"data-parallax-rate-y\") || \"\";\r\n        const parallaxRateXValue : number = !isNaN(parseFloat(parallaxRateX)) ? parseFloat(parallaxRateX) : 0;\r\n        const parallaxRateYValue : number = !isNaN(parseFloat(parallaxRateY)) ? parseFloat(parallaxRateY) : 0;\r\n        const elementIsAboveFold : boolean = getElementIsAboveFold(parallaxItems[a]);\r\n        const elementOffsetX : number = elementIsAboveFold ? 0 : (-1) * parallaxRateXValue * (window.innerWidth / 2 - parallaxItems[a].clientWidth); //px\r\n        const elementOffsetY : number = elementIsAboveFold ? 0 : (-1) * parallaxRateYValue * (window.innerHeight - parallaxItems[a].clientHeight); //px\r\n        \r\n        parallaxItems[a].style.transform = \"translate(\" + elementOffsetX + \"px, \" + elementOffsetY + \"px)\";\r\n        parallaxItems[a].setAttribute(\"data-parallax-offset-x\", elementOffsetX);\r\n        parallaxItems[a].setAttribute(\"data-parallax-offset-y\", elementOffsetY);\r\n        parallaxItems[a].classList.add(\"parallaxSet\");\r\n    }  \r\n\r\n    return;            \r\n}\r\nconst manageParallax : () => void = () => {\r\n    const parallaxElements : any = document.getElementsByClassName(\"hasParallax\");\r\n\r\n    for (var a = 0; a < parallaxElements.length; a++) {\r\n        const elementIsInViewport : boolean = getElementIsInViewportY(parallaxElements[a]);\r\n\r\n        if (!elementIsInViewport) { continue; }\r\n        \r\n        const parallaxItems : any = parallaxElements[a].getElementsByClassName(\"parallaxItem\");\r\n\r\n        for (var b = 0; b < parallaxItems.length; b++) {\r\n            setElementParallax(parallaxItems[b]);\r\n        }   \r\n    }\r\n\r\n    return;\r\n}\r\nwindow.addEventListener(\"load\", () => { setParallaxOffsets(); });\r\nwindow.addEventListener(\"scroll\", () => { manageParallax(); });"]}